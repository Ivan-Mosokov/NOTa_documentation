#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–∫–æ–Ω–æ–∫
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/create-icon-component.js <–∏–º—è-–∏–∫–æ–Ω–∫–∏>
 * –ü—Ä–∏–º–µ—Ä: node scripts/create-icon-component.js Duplicate24
 */

const iconName = process.argv[2];

if (!iconName) {
    console.error('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –∏–∫–æ–Ω–∫–∏');
    console.error('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/create-icon-component.js <–∏–º—è-–∏–∫–æ–Ω–∫–∏>');
    process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ SVG —Ñ–∞–π–ª
const svgPath = path.join(__dirname, '../public', `${iconName}.svg`);
if (!fs.existsSync(svgPath)) {
    console.error(`SVG —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${svgPath}`);
    process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º –∏–º—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ (PascalCase)
const componentName = iconName
    .replace(/^[a-z]/, (match) => match.toUpperCase())
    .replace(/[A-Z]/g, (match, index) => {
        if (index === 0) return match;
        return match;
    });

// –°–æ–∑–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
const componentContent = `import React from 'react';
import Icon from './Icon';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–∫–æ–Ω–∫–∏ ${componentName}
 * @param {Object} props - –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {number} props.width - –®–∏—Ä–∏–Ω–∞ –∏–∫–æ–Ω–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 24)
 * @param {number} props.height - –í—ã—Å–æ—Ç–∞ –∏–∫–æ–Ω–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 24)
 * @param {string} props.className - CSS –∫–ª–∞—Å—Å—ã
 * @param {Object} props.style - –ò–Ω–ª–∞–π–Ω —Å—Ç–∏–ª–∏
 */
const ${componentName}Icon = ({ 
  width = 24, 
  height = 24, 
  className = '', 
  style = {}, 
  ...props 
}) => {
  return (
    <Icon
      name="${iconName}"
      width={width}
      height={height}
      className={className}
      style={style}
      alt="${componentName} icon"
      {...props}
    />
  );
};

export default ${componentName}Icon;
`;

// –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
const componentPath = path.join(__dirname, '../components', `${componentName}Icon.jsx`);
fs.writeFileSync(componentPath, componentContent);

// –û–±–Ω–æ–≤–ª—è–µ–º index.js
const indexPath = path.join(__dirname, '../components/index.js');
let indexContent = fs.readFileSync(indexPath, 'utf8');

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–∫—Å–ø–æ—Ä—Ç
const newExport = `export { default as ${componentName}Icon } from './${componentName}Icon';`;
if (!indexContent.includes(newExport)) {
    indexContent = indexContent.replace(
        /export { default as PlusIcon } from '\.\/PlusIcon';/,
        `export { default as PlusIcon } from './PlusIcon';\nexport { default as ${componentName}Icon } from './${componentName}Icon';`
    );
    fs.writeFileSync(indexPath, indexContent);
}

// –û–±–Ω–æ–≤–ª—è–µ–º mdx-components.jsx
const mdxPath = path.join(__dirname, '../mdx-components.jsx');
let mdxContent = fs.readFileSync(mdxPath, 'utf8');

// –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç
if (!mdxContent.includes(`${componentName}Icon`)) {
    mdxContent = mdxContent.replace(
        /import \{ DuplicateIcon, Icon, PlusIcon \} from '\.\/components';/,
        `import { DuplicateIcon, Icon, PlusIcon, ${componentName}Icon } from './components';`
    );

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ–±—ä–µ–∫—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    mdxContent = mdxContent.replace(
        /export const mdxComponents = \{[\s\S]*?PlusIcon,[\s\S]*?\};/,
        `export const mdxComponents = {\n  DuplicateIcon,\n  Icon,\n  PlusIcon,\n  ${componentName}Icon,\n  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–¥–µ—Å—å\n};`
    );

    fs.writeFileSync(mdxPath, mdxContent);
}

console.log(`‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ${componentName}Icon —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!`);
console.log(`üìÅ –§–∞–π–ª: ${componentPath}`);
console.log(`üìù –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ MDX: <${componentName}Icon />`);
